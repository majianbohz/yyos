
Merging program properties

Removed property 0xc0000002 to merge kernel.o (0x3) and print.o (not found)
Removed property 0xc0000002 to merge kernel.o (not found) and descriptor.o (0x3)
Removed property 0xc0000002 to merge kernel.o (not found) and convert.o (0x3)

Allocating common symbols
Common symbol       size              file

idt_ptr             0x6               descriptor.o
gdt                 0x40              descriptor.o
gdt_ptr             0x6               descriptor.o
idt                 0x800             descriptor.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel.o
 .note.gnu.property
                0x0000000000000000       0x1c kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 descriptor.o
 .note.gnu.property
                0x0000000000000000       0x1c descriptor.o
 .note.GNU-stack
                0x0000000000000000        0x0 convert.o
 .note.gnu.property
                0x0000000000000000       0x1c convert.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x100000
LOAD kernel.o
LOAD print.o
LOAD descriptor.o
LOAD switchdescriptortable.o
LOAD interrupt.o
LOAD convert.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048074                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rel.text       0x0000000008048074        0x0
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048074        0x0 kernel.o

.rel.fini
 *(.rel.fini)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rel.data.rel.ro
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rel.tdata
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)

.rel.tbss
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)

.rel.ctors
 *(.rel.ctors)

.rel.dtors
 *(.rel.dtors)

.rel.got        0x0000000008048074        0x0
 *(.rel.got)
 .rel.got       0x0000000008048074        0x0 kernel.o

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rel.ifunc
 *(.rel.ifunc)

.rel.plt        0x0000000008048074        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048074        0x0 kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048074        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048074        0x0 kernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000100000      0x8da
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000100000       0x61 kernel.o
                0x0000000000100000                _start
                0x0000000000100033                c_isr
 *fill*         0x0000000000100061        0xf 
 .text          0x0000000000100070       0x5e print.o
                0x0000000000100070                printstr
                0x0000000000100098                printc
                0x00000000001000b7                setprintline
 .text          0x00000000001000ce      0x53e descriptor.o
                0x00000000001000ce                init_gdt
                0x00000000001001be                init_idt
                0x00000000001004e9                set_descriptor
                0x00000000001005a0                set_idt_descriptor
 *fill*         0x000000000010060c        0x4 
 .text          0x0000000000100610       0x2d switchdescriptortable.o
                0x0000000000100610                switch_gdt
                0x0000000000100633                switch_idt
 *fill*         0x000000000010063d        0x3 
 .text          0x0000000000100640      0x22e interrupt.o
                0x0000000000100640                isr0
                0x000000000010064f                isr1
                0x000000000010065e                isr2
                0x000000000010066d                isr3
                0x000000000010067c                isr4
                0x000000000010068b                isr5
                0x000000000010069a                isr6
                0x00000000001006a9                isr7
                0x00000000001006b8                isr8
                0x00000000001006c7                isr9
                0x00000000001006d6                isr10
                0x00000000001006e5                isr11
                0x00000000001006f4                isr12
                0x0000000000100703                isr13
                0x0000000000100712                isr14
                0x0000000000100721                isr15
                0x0000000000100730                isr16
                0x000000000010073f                isr17
                0x000000000010074e                isr18
                0x000000000010075d                isr19
                0x000000000010076c                isr32
                0x000000000010077b                isr33
                0x000000000010078a                isr34
                0x0000000000100799                isr35
                0x00000000001007a8                isr36
                0x00000000001007b7                isr37
                0x00000000001007c6                isr38
                0x00000000001007d5                isr39
                0x00000000001007e4                isr40
                0x00000000001007f3                isr41
                0x0000000000100802                isr42
                0x0000000000100811                isr43
                0x0000000000100820                isr44
                0x000000000010082f                isr45
                0x000000000010083e                isr46
                0x000000000010084d                isr47
                0x000000000010085c                isrx
 .text          0x000000000010086e       0x6c convert.o
                0x000000000010086e                convertInt2Str
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000001008da       0x15
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000001008da       0x15 kernel.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000001008f0       0xf4
 *(.eh_frame)
 .eh_frame      0x00000000001008f0       0x54 kernel.o
 .eh_frame      0x0000000000100944       0x80 descriptor.o
                                         0x98 (size before relaxing)
 .eh_frame      0x00000000001009c4       0x20 convert.o
                                         0x38 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x00000000001009e4                . = .

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x00000000001009e4        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000001009e4        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000001009e4        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000001009e4        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000001009e4        0x0
 *(.got)
 .got           0x00000000001009e4        0x0 kernel.o
 *(.igot)

.got.plt        0x00000000001009e4        0x0
 *(.got.plt)
 .got.plt       0x00000000001009e4        0x0 kernel.o
 *(.igot.plt)
 .igot.plt      0x00000000001009e4        0x0 kernel.o

.data           0x00000000001009e4        0x0
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000001009e4        0x0 kernel.o
 .data          0x00000000001009e4        0x0 descriptor.o
 .data          0x00000000001009e4        0x0 convert.o

.data1
 *(.data1)
                0x00000000001009e4                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000001009e4                . = .
                0x00000000001009e4                __bss_start = .

.bss            0x0000000000100a00      0x880
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000100a00        0x0 kernel.o
 .bss           0x0000000000100a00        0x0 descriptor.o
 .bss           0x0000000000100a00        0x0 convert.o
 *(COMMON)
 COMMON         0x0000000000100a00      0x880 descriptor.o
                0x0000000000100a00                idt_ptr
                0x0000000000100a20                gdt
                0x0000000000100a60                gdt_ptr
                0x0000000000100a80                idt
                0x0000000000101280                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000101280                . = ALIGN (0x4)
                0x0000000000101280                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000101280                . = ALIGN (0x4)
                0x0000000000101280                _end = .
                [!provide]                        PROVIDE (end = .)

.stab           0x0000000000000000     0x10c8
 *(.stab)
 .stab          0x0000000000000000      0x1e0 print.o
 .stab          0x00000000000001e0       0xf0 switchdescriptortable.o
                                         0xfc (size before relaxing)
 .stab          0x00000000000002d0      0xdf8 interrupt.o
                                        0xe04 (size before relaxing)

.stabstr        0x0000000000000000       0x48
 *(.stabstr)
 .stabstr       0x0000000000000000       0x48 print.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a kernel.o
                                         0x2b (size before relaxing)
 .comment       0x000000000000002a       0x2b descriptor.o
 .comment       0x000000000000002a       0x2b convert.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel.o
 .debug_aranges
                0x0000000000000020       0x20 descriptor.o
 .debug_aranges
                0x0000000000000040       0x20 convert.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x43a
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x92 kernel.o
 .debug_info    0x0000000000000092      0x315 descriptor.o
 .debug_info    0x00000000000003a7       0x93 convert.o

.debug_abbrev   0x0000000000000000      0x276
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x92 kernel.o
 .debug_abbrev  0x0000000000000092      0x159 descriptor.o
 .debug_abbrev  0x00000000000001eb       0x8b convert.o

.debug_line     0x0000000000000000      0x228
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x5a kernel.o
 .debug_line    0x000000000000005a      0x14b descriptor.o
 .debug_line    0x00000000000001a5       0x83 convert.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x218
 *(.debug_str)
 .debug_str     0x0000000000000000       0xb7 kernel.o
                                         0xc9 (size before relaxing)
 .debug_str     0x00000000000000b7      0x13b descriptor.o
                                        0x1de (size before relaxing)
 .debug_str     0x00000000000001f2       0x26 convert.o
                                         0xbc (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.elf elf32-i386)
