
Merging program properties

Removed property 0xc0000002 to merge kernel.o (0x3) and print.o (not found)
Removed property 0xc0000002 to merge kernel.o (not found) and descriptor.o (0x3)
Removed property 0xc0000002 to merge kernel.o (not found) and convert.o (0x3)
Removed property 0xc0000002 to merge kernel.o (not found) and process.o (0x3)

Allocating common symbols
Common symbol       size              file

idt_ptr             0x6               descriptor.o
gdt                 0xf0              descriptor.o
tss                 0x68              descriptor.o
gdt_ptr             0x6               descriptor.o
idt                 0x800             descriptor.o
process_control_block
                    0x168             process.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel.o
 .note.gnu.property
                0x0000000000000000       0x1c kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 descriptor.o
 .note.gnu.property
                0x0000000000000000       0x1c descriptor.o
 .note.GNU-stack
                0x0000000000000000        0x0 convert.o
 .note.gnu.property
                0x0000000000000000       0x1c convert.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.gnu.property
                0x0000000000000000       0x1c process.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x100000
LOAD kernel.o
LOAD print.o
LOAD descriptor.o
LOAD switchdescriptortable.o
LOAD interrupt.o
LOAD convert.o
LOAD port.o
LOAD process.o
LOAD process_manage.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048074                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rel.text       0x0000000008048074        0x0
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048074        0x0 kernel.o

.rel.fini
 *(.rel.fini)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rel.data.rel.ro
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rel.tdata
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)

.rel.tbss
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)

.rel.ctors
 *(.rel.ctors)

.rel.dtors
 *(.rel.dtors)

.rel.got        0x0000000008048074        0x0
 *(.rel.got)
 .rel.got       0x0000000008048074        0x0 kernel.o

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rel.ifunc
 *(.rel.ifunc)

.rel.plt        0x0000000008048074        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048074        0x0 kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048074        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048074        0x0 kernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000100000      0xbd0
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000100000       0xb1 kernel.o
                0x0000000000100000                _start
                0x000000000010003d                c_isr
                0x0000000000100098                task_init
 *fill*         0x00000000001000b1        0xf 
 .text          0x00000000001000c0       0xa5 print.o
                0x00000000001000c0                printstr
                0x00000000001000fa                printc
                0x000000000010012b                setprintline
 .text          0x0000000000100165      0x5c9 descriptor.o
                0x0000000000100165                init_gdt
                0x00000000001002e0                init_idt
                0x000000000010060b                set_descriptor
                0x00000000001006c2                set_idt_descriptor
 *fill*         0x000000000010072e        0x2 
 .text          0x0000000000100730       0x2d switchdescriptortable.o
                0x0000000000100730                switch_gdt
                0x0000000000100753                switch_idt
 *fill*         0x000000000010075d        0x3 
 .text          0x0000000000100760      0x298 interrupt.o
                0x0000000000100760                isr0
                0x000000000010076f                isr1
                0x000000000010077e                isr2
                0x000000000010078d                isr3
                0x000000000010079c                isr4
                0x00000000001007ab                isr5
                0x00000000001007ba                isr6
                0x00000000001007c9                isr7
                0x00000000001007d8                isr8
                0x00000000001007e7                isr9
                0x00000000001007f6                isr10
                0x0000000000100805                isr11
                0x0000000000100814                isr12
                0x0000000000100823                isr13
                0x0000000000100832                isr14
                0x0000000000100841                isr15
                0x0000000000100850                isr16
                0x000000000010085f                isr17
                0x000000000010086e                isr18
                0x000000000010087d                isr19
                0x000000000010088c                isr32
                0x000000000010089f                isr33
                0x00000000001008b6                isr34
                0x00000000001008c9                isr35
                0x00000000001008dc                isr36
                0x00000000001008ef                isr37
                0x0000000000100902                isr38
                0x0000000000100915                isr39
                0x0000000000100928                isr40
                0x000000000010093f                isr41
                0x0000000000100956                isr42
                0x000000000010096d                isr43
                0x0000000000100984                isr44
                0x000000000010099b                isr45
                0x00000000001009b2                isr46
                0x00000000001009c9                isr47
                0x00000000001009e0                isrx
 .text          0x00000000001009f8       0xdf convert.o
                0x00000000001009f8                convertInt2Hex
                0x0000000000100a64                convertChar2Hex
 *fill*         0x0000000000100ad7        0x9 
 .text          0x0000000000100ae0       0x20 port.o
                0x0000000000100ae0                in_port_byte
                0x0000000000100af1                out_port_byte
 .text          0x0000000000100b00       0xba process.o
                0x0000000000100b00                switch2TaskUser1
                0x0000000000100b1f                switch2TaskUser2
                0x0000000000100b3e                entry_task_init
 *fill*         0x0000000000100bba        0x6 
 .text          0x0000000000100bc0       0x10 process_manage.o
                0x0000000000100bc0                switch_task_asm
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x0000000000100bd0       0x2c
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000100bd0       0x15 kernel.o
 *fill*         0x0000000000100be5        0x1 
 .rodata        0x0000000000100be6       0x16 process.o
                0x0000000000100be6                selector_tss
                0x0000000000100be8                selector_kernel_code
                0x0000000000100bea                selector_kernel_data
                0x0000000000100bec                selector_task_kernel1_code
                0x0000000000100bee                selector_task_kernel1_data
                0x0000000000100bf0                selector_task_kernel2_code
                0x0000000000100bf2                selector_task_kernel2_data
                0x0000000000100bf4                selector_task_user1_code
                0x0000000000100bf6                selector_task_user1_data
                0x0000000000100bf8                selector_task_user2_code
                0x0000000000100bfa                selector_task_user2_data

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000100bfc      0x19c
 *(.eh_frame)
 .eh_frame      0x0000000000100bfc       0x70 kernel.o
 .eh_frame      0x0000000000100c6c       0x80 descriptor.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000100cec       0x40 convert.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000100d2c       0x6c process.o
                                         0x84 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x0000000000100d98                . = .

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x0000000000100d98        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000100d98        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000100d98        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x0000000000100d98        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000100d98        0x0
 *(.got)
 .got           0x0000000000100d98        0x0 kernel.o
 *(.igot)

.got.plt        0x0000000000100d98        0x0
 *(.got.plt)
 .got.plt       0x0000000000100d98        0x0 kernel.o
 *(.igot.plt)
 .igot.plt      0x0000000000100d98        0x0 kernel.o

.data           0x0000000000100d98        0x0
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000100d98        0x0 kernel.o
 .data          0x0000000000100d98        0x0 descriptor.o
 .data          0x0000000000100d98        0x0 convert.o
 .data          0x0000000000100d98        0x0 process.o

.data1
 *(.data1)
                0x0000000000100d98                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000100d98                . = .
                0x0000000000100d98                __bss_start = .

.bss            0x0000000000100da0      0xb08
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000100da0        0x0 kernel.o
 .bss           0x0000000000100da0        0x0 descriptor.o
 .bss           0x0000000000100da0        0x0 convert.o
 .bss           0x0000000000100da0        0x0 process.o
 *(COMMON)
 COMMON         0x0000000000100da0      0x9a0 descriptor.o
                0x0000000000100da0                idt_ptr
                0x0000000000100dc0                gdt
                0x0000000000100ec0                tss
                0x0000000000100f28                gdt_ptr
                0x0000000000100f40                idt
 COMMON         0x0000000000101740      0x168 process.o
                0x0000000000101740                process_control_block
                0x00000000001018a8                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000001018a8                . = ALIGN (0x4)
                0x00000000001018a8                . = SEGMENT_START ("ldata-segment", .)
                0x00000000001018a8                . = ALIGN (0x4)
                0x00000000001018a8                _end = .
                [!provide]                        PROVIDE (end = .)

.stab           0x0000000000000000     0x156c
 *(.stab)
 .stab          0x0000000000000000      0x2b8 print.o
 .stab          0x00000000000002b8       0xf0 switchdescriptortable.o
                                         0xfc (size before relaxing)
 .stab          0x00000000000003a8     0x1068 interrupt.o
                                       0x1074 (size before relaxing)
 .stab          0x0000000000001410       0xe4 port.o
                                         0xf0 (size before relaxing)
 .stab          0x00000000000014f4       0x78 process_manage.o
                                         0x84 (size before relaxing)

.stabstr        0x0000000000000000       0x71
 *(.stabstr)
 .stabstr       0x0000000000000000       0x71 print.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a kernel.o
                                         0x2b (size before relaxing)
 .comment       0x000000000000002a       0x2b descriptor.o
 .comment       0x000000000000002a       0x2b convert.o
 .comment       0x000000000000002a       0x2b process.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel.o
 .debug_aranges
                0x0000000000000020       0x20 descriptor.o
 .debug_aranges
                0x0000000000000040       0x20 convert.o
 .debug_aranges
                0x0000000000000060       0x20 process.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xa4d
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0xd0 kernel.o
 .debug_info    0x00000000000000d0      0x49d descriptor.o
 .debug_info    0x000000000000056d       0xe8 convert.o
 .debug_info    0x0000000000000655      0x3f8 process.o

.debug_abbrev   0x0000000000000000      0x3e6
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xcd kernel.o
 .debug_abbrev  0x00000000000000cd      0x188 descriptor.o
 .debug_abbrev  0x0000000000000255       0xa5 convert.o
 .debug_abbrev  0x00000000000002fa       0xec process.o

.debug_line     0x0000000000000000      0x33d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x74 kernel.o
 .debug_line    0x0000000000000074      0x174 descriptor.o
 .debug_line    0x00000000000001e8       0xca convert.o
 .debug_line    0x00000000000002b2       0x8b process.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x40e
 *(.debug_str)
 .debug_str     0x0000000000000000       0xc0 kernel.o
                                         0xdc (size before relaxing)
 .debug_str     0x00000000000000c0      0x16e descriptor.o
                                        0x218 (size before relaxing)
 .debug_str     0x000000000000022e       0x3d convert.o
                                         0xd3 (size before relaxing)
 .debug_str     0x000000000000026b      0x1a3 process.o
                                        0x29c (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.elf elf32-i386)
